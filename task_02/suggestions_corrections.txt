---------------------------------------------------------------------------
NOTE: Please refer the 'SUUGGESTIONS' section after review the CORRECTIONS.
---------------------------------------------------------------------------


*************************************
***** CORRECTIONS FOR test.html *****
*************************************

* Cannot have a xmlns attribute for html element.
<HTML xmlns:fb="http://www.facebook.com/2008/fbml">

* No title element (title element is required in all HTML documents).

* Wrong commenting in javascript code.
<!--// Get the data using ajax //-->

* Elements outside of the body element.

* Empty script tags.
<SCRIPT></SCRIPT>

* font element is deprecated in HTML 4.01, so that have to style the h1 tag by CSS.
<H1><FONT FACE="verdana" COLOR="green">Welcome</FONT></H1>

* center element is deprecated in HTML 4.01, so that have to use CSS for this purpose.
<CENTER><DIV CLASS="InfoDiv"></DIV></CENTER>

* Changed /getinfo/ to getinfo.php/. This may not need if there is an URL rule for convert getinfo.php to getinfo.
"getinfo.php/1", {}, 

***************************************************************************************


***************************************
***** CORRECTIONS FOR getinfo.php *****
***************************************

* Extra closing bracket in line 4
$ArrayURL = split('/', $_SERVER[REQUEST_URI]));

* Assignment in the condition
if (is_object($data) = true) $status = '200 OK';

* dataObj class is not existing (used condoData)
$data = new dataObj(); 

* Better to get the $id from the last element of $ArrayURL always. (Then id value also msut pass at the end of the url always)

* Incorrect assignment for $status_header. Have to use double quotes or use string concatanation if single quotes are used.
$status_header = 'HTTP/1.1 $status';

* Return json_encode value is not effective. Have to echo or print that.
return json_encode( $data->getAll($id) );

***************************************************************************************


************************************
***** CORRECTIONS FOR data.php *****
************************************

* In condoData and hdbData do not use private $table properties. Use constructors and pass the table names to the constructor of their parent class propertyData.

* Create a constructor in propertyData class with the $table argument and call to parent class baseObj constructor.

* In the baseObj constructor, assign the $table property value from the given constructor argument. And use $this->table within the class where we need to use $table property. 

***************************************************************************************


************************************
***** CORRECTIONS FOR data.sql *****
************************************

* Invalid collation 'MyISAM' for Property table to use the primary key as the foreign key of other tables.
  Have to change it to InnoDB which supports for foreign keys.
ENGINE=MyISAM; 

* No primary key defined in Condo table. Have to specify a primary key constrant using 'PRIMARY KEY'. 
ID BIGINT AUTO_INCREMENT,

* Type of the foreign key is different in Condo table. It is defined as INT but it is BIGINT in Property table. Have to change it to BIGINT.
PID INT NOT NULL,

***************************************************************************************


************************
***** SUUGGESTIONS *****
************************

* Need to refactor the classes in data.php
In the current code when we call to getAll() by hdbData object, we will get only the HDB table records.
But in there, we should have related Property data also (Becuase there is a relation between HDB and Property)
Also we should able to query the Property table fields by hdbData object. But currently it is not possible and there will be and error when we call getAddress() by hdbData object.
So that we should implement a ORM based class structure.

* Better to follow the naming convention standards.
Ex: $ArrayURL should use with lower case letter
    $status_header should not use '_', better use uppser case letter for word seperation ($statusHeader)
    Class names should be begin with upper case letters (PropertyData)

* Use propertyType & propertyId variables in the AJAX call of test.html. Then retrieve the GET parameter and get the table data accordingly in getinfo.php
$.get(
    "getinfo.php/1", {propertyType: "HDB", propertyId: 111},
    function(data) { $('.InfoDiv').html(data); }
);     